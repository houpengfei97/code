#!/usr/bin/env python
#coding: utf-8

from __future__ import division
import os

LOG_FILE = '/opt/cloud/logs/jvm/gc.log'
POSITION_FILE = '/tmp/201907251732gc.log'

def get_position():
    #第一次读取日志文件，POSITION_FILE为空
    if not os.path.exists(POSITION_FILE):
        start_position = str(0)
        end_position = str(os.path.getsize(LOG_FILE))
        fh = open(POSITION_FILE,'w')
        fh.write('start_position: %s\n' % start_position)
        fh.write('end_position: %s\n' % end_position)
        fh.close()
        os._exit(1)
    else:
        fh = open(POSITION_FILE)
        se = fh.readlines()
        fh.close()
        #其他意外情况导致POSITION_FILE内容不是两行
        if len(se) != 2:
            os.remove(POSITION_FILE)
            os._exit(1)
        last_start_position,last_end_position = [item.split(':')[1].strip() for item in se]
        start_position = last_end_position
        end_position = str(os.path.getsize(LOG_FILE))
        #日志轮转导致start_position > end_position
        #print start_position,end_position
        if start_position > end_position:
            start_position = 0
        #日志停止滚动时
        elif start_position == end_position:
            os._exit(1)
        #print start_position,end_position
        fh = open(POSITION_FILE,'w')
        fh.write('start_position: %s\n' % start_position)
        fh.write('end_position: %s\n' % end_position)
        fh.close()
        return map(int,[start_position,end_position])

def write_status(content):
    fh = open(STATUS_FILE,'w')
    fh.write(content)
    fh.close()

def handle_log(start_position,end_position):
    log = open(LOG_FILE)
    log.seek(start_position,0)
    YG=0
    CMS=0
    FG=0
    while True:
        current_position = log.tell()
        if current_position >= end_position:
            break
        line = log.readline()
        if line.find("CMS Initial Mark")!=-1:
            CMS+=1
        elif line.find("ParNew")!=-1:
            YG+=1
        elif line.find("Full GC")!=-1:
            FG+=1

    log.close()
    print "==JVMStatus"
    print "CMSGC=%s,FULLGC=%s,YOUNGGC=%s" % (CMS,FG,YG)


if __name__ == '__main__':
    start_position,end_position = get_position()
    handle_log(start_position,end_position)
